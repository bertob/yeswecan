{
 "features": {
  "png-alpha": {
   "title": "PNG alpha transparency",
   "description": "Semi-transparent areas in PNG files"
  },
  "apng": {
   "title": "Animated PNG (APNG)",
   "description": "Like animated GIFs, but allowing 24-bit colors and alpha transparency"
  },
  "video": {
   "title": "Video element",
   "description": "Method of playing videos on webpages (without requiring a plug-in)."
  },
  "audio": {
   "title": "Audio element",
   "description": "Method of playing sound on webpages (without requiring a plug-in)."
  },
  "contenteditable": {
   "title": "contenteditable attribute (basic support)",
   "description": "Method of making any HTML element editable."
  },
  "dragndrop": {
   "title": "Drag and Drop",
   "description": "Method of easily dragging and dropping elements on a page, requiring minimal JavaScript."
  },
  "internationalization": {
   "title": "Internationalization API",
   "description": "Locale-sensitive collation (string comparison), number formatting, and date and time formatting."
  },
  "queryselector": {
   "title": "querySelector/querySelectorAll",
   "description": "Method of accessing DOM elements using CSS selectors"
  },
  "getelementsbyclassname": {
   "title": "getElementsByClassName",
   "description": "Method of accessing DOM elements by class name"
  },
  "forms": {
   "title": "HTML5 form features",
   "description": "Expanded form options, including things like date pickers, sliders, validation, placeholders and multiple file uploads. Previously known as \"Web forms 2.0\"."
  },
  "html5semantic": {
   "title": "New semantic elements",
   "description": "HTML5 offers some new elements, primarily for semantic purposes. The elements include: section`, `article`, `aside`, `header`, `footer`, `nav`, `figure`, `figcaption`, `time`, `mark` & `main`."
  },
  "css-line-clamp": {
   "title": "CSS line-clamp",
   "description": "Proprietary and undocumented CSS property that will contain text to a given amount of lines when used in combination with display: -webkit-box`. It will end with ellipsis when `text-overflow: ellipsis` is included."
  },
  "offline-apps": {
   "title": "Offline web applications",
   "description": "Now deprecated method of defining web page files to be cached using a cache manifest file, allowing them to work offline on subsequent visits to the page. "
  },
  "webworkers": {
   "title": "Web Workers",
   "description": "Method of running scripts in the background, isolated from the web page"
  },
  "fontface": {
   "title": "@font-face Web fonts",
   "description": "Method of displaying fonts downloaded from websites"
  },
  "eot": {
   "title": "EOT - Embedded OpenType fonts",
   "description": "Type of font that can be derived from a regular font, allowing small files and legal use of high-quality fonts. Usage is restricted by the file being tied to the website"
  },
  "woff": {
   "title": "WOFF - Web Open Font Format",
   "description": "Compressed TrueType/OpenType font that contains information about the fonts source."
  },
  "multibackgrounds": {
   "title": "CSS3 Multiple backgrounds",
   "description": "Method of using multiple images as a background"
  },
  "border-image": {
   "title": "CSS3 Border images",
   "description": "Method of using images for borders"
  },
  "background-img-opts": {
   "title": "CSS3 Background-image options",
   "description": "New properties to affect background images, including background-clip, background-origin and background-size"
  },
  "css-table": {
   "title": "CSS Table display",
   "description": "Method of displaying elements as tables, rows, and cells. Includes support for all display: table-*` properties as well as `display: inline-table`"
  },
  "css-gencontent": {
   "title": "CSS Generated content for pseudo-elements",
   "description": "Method of displaying text or images before or after the given elements contents using the ::before and ::after pseudo-elements. All browsers with support also support the attr()` notation in the `content` property. "
  },
  "css-fixed": {
   "title": "CSS position:fixed",
   "description": "Method of keeping an element in a fixed location regardless of scroll position"
  },
  "beacon": {
   "title": "Beacon API",
   "description": "Allows data to be sent asynchronously to a server with navigator.sendBeacon`, even after a page was closed. Useful for posting analytics data the moment a user was finished using the page."
  },
  "hashchange": {
   "title": "Hashchange event",
   "description": "Event triggered in JavaScript when the URLs hash has changed (for example: page.html#foo to page.html#bar) "
  },
  "css-sel2": {
   "title": "CSS 2.1 selectors",
   "description": "Basic CSS selectors including: *` (universal selector), `>` (child selector), `:first-child`, `:link`, `:visited`, `:active`, `:hover`, `:focus`, `:lang()`, `+` (adjacent sibling selector), `[attr]`, `[attr=\"val\"]`, `[attr~=\"val\"]`, `[attr|=\"bar\"]`, `.foo` (class selector), `#foo` (id selector)"
  },
  "css-sel3": {
   "title": "CSS3 selectors",
   "description": "Advanced element selection using selectors including: [foo^=\"bar\"]`, `[foo$=\"bar\"]`, `[foo*=\"bar\"]`, `:root`, `:nth-child()`,  `:nth-last-child()`, `nth-of-type`, `nth-last-of-type()`, `:last-child`, `:first-of-type`, `:last-of-type`, `:only-child`, `:only-of-type`, `:empty`, `:target`, `:enabled`, `:disabled`, `:checked`, `:not()`, `~` (general sibling)"
  },
  "css-textshadow": {
   "title": "CSS3 Text-shadow",
   "description": "Method of applying one or more shadow or blur effects to text"
  },
  "css-boxshadow": {
   "title": "CSS3 Box-shadow",
   "description": "Method of displaying an inner or outer shadow effect to elements"
  },
  "css3-colors": {
   "title": "CSS3 Colors",
   "description": "Method of describing colors using Hue, Saturation and Lightness (hsl()) rather than just RGB, as well as allowing alpha-transparency with rgba() and hsla()."
  },
  "css3-boxsizing": {
   "title": "CSS3 Box-sizing",
   "description": "Method of specifying whether or not an elements borders and padding should be included in size units"
  },
  "css-mediaqueries": {
   "title": "CSS3 Media Queries",
   "description": "Method of applying styles based on media information. Includes things like page and device dimensions"
  },
  "multicolumn": {
   "title": "CSS3 Multiple column layout",
   "description": "Method of flowing information in multiple columns"
  },
  "border-radius": {
   "title": "CSS3 Border-radius (rounded corners)",
   "description": "Method of making the border corners round. Covers support for the shorthand border-radius` as well as the long-hand properties (e.g. `border-top-left-radius`)"
  },
  "transforms2d": {
   "title": "CSS3 2D Transforms",
   "description": "Method of transforming an element including rotating, scaling, etc. Includes support for transform` as well as `transform-origin` properties."
  },
  "use-strict": {
   "title": "ECMAScript 5 Strict Mode",
   "description": "Method of placing code in a \"strict\" operating context."
  },
  "devicepixelratio": {
   "title": "Window.devicePixelRatio",
   "description": "Read-only property that returns the ratio of the (vertical) size of one physical pixel on the current display device to the size of one CSS pixel."
  },
  "transforms3d": {
   "title": "CSS3 3D Transforms",
   "description": "Method of transforming an element in the third dimension using the transform` property. Includes support for the `perspective` property to set the perspective in z-space and the `backface-visibility` property to toggle display of the reverse side of a 3D-transformed element."
  },
  "sharedworkers": {
   "title": "Shared Web Workers",
   "description": "Method of allowing multiple scripts to communicate with a single web worker."
  },
  "css-hyphens": {
   "title": "CSS Hyphenation",
   "description": "Method of controlling when words at the end of lines should be hyphenated using the \"hyphens\" property."
  },
  "css-transitions": {
   "title": "CSS3 Transitions",
   "description": "Simple method of animating certain properties of an element, with ability to define property, duration, delay and timing function. "
  },
  "font-feature": {
   "title": "CSS font-feature-settings",
   "description": "Method of applying advanced typographic and language-specific font features to supported OpenType fonts."
  },
  "css-animation": {
   "title": "CSS Animation",
   "description": "Complex method of animating certain properties of an element"
  },
  "css-gradients": {
   "title": "CSS Gradients",
   "description": "Method of defining a linear or radial color gradient as a CSS image."
  },
  "css-canvas": {
   "title": "CSS Canvas Drawings",
   "description": "Method of using HTML5 Canvas as a background image. Not currently part of any specification."
  },
  "css-reflections": {
   "title": "CSS Reflections",
   "description": "Method of displaying a reflection of an element"
  },
  "css-masks": {
   "title": "CSS Masks",
   "description": "Method of displaying part of an element, using a selected image as a mask"
  },
  "console-basic": {
   "title": "Basic console logging functions",
   "description": "Method of outputting data to the browsers console, intended for development purposes."
  },
  "svg": {
   "title": "SVG (basic support)",
   "description": "Method of displaying basic Vector Graphics features using the embed or object elements. Refers to the SVG 1.1 spec."
  },
  "svg-css": {
   "title": "SVG in CSS backgrounds",
   "description": "Method of using SVG images as CSS backgrounds"
  },
  "svg-smil": {
   "title": "SVG SMIL animation",
   "description": "Method of using animation elements to animate SVG images"
  },
  "svg-fonts": {
   "title": "SVG fonts",
   "description": "Method of using fonts defined as SVG shapes. Removed from [SVG 2.0](http://www.w3.org/TR/SVG2/changes.html#fonts) and considered as a deprecated feature with support being removed from browsers."
  },
  "svg-filters": {
   "title": "SVG filters",
   "description": "Method of using photoshop-like effects on SVG objects including blurring and color manipulation."
  },
  "svg-html": {
   "title": "SVG effects for HTML",
   "description": "Method of using SVG transforms, filters, etc on HTML elements using either CSS or the foreignObject element"
  },
  "svg-html5": {
   "title": "Inline SVG in HTML5",
   "description": "Method of using SVG tags directly in HTML documents. Requires HTML5 parser."
  },
  "canvas": {
   "title": "Canvas (basic support)",
   "description": "Method of generating fast, dynamic graphics using JavaScript."
  },
  "canvas-text": {
   "title": "Text API for Canvas",
   "description": "Method of displaying text on Canvas elements"
  },
  "namevalue-storage": {
   "title": "Web Storage - name/value pairs",
   "description": "Method of storing data locally like cookies, but for larger amounts of data (sessionStorage and localStorage, used to fall under HTML5)."
  },
  "sql-storage": {
   "title": "Web SQL Database",
   "description": "Method of storing data client-side, allows Sqlite database queries for access and manipulation"
  },
  "indexeddb": {
   "title": "IndexedDB",
   "description": "Method of storing data client-side, allows indexed database queries."
  },
  "online-status": {
   "title": "Online/offline status",
   "description": "Events to indicate when the users connected (online` and `offline` events) and the `navigator.onLine` property to see current status."
  },
  "eventsource": {
   "title": "Server-sent events",
   "description": "Method of continuously sending data from a server to the browser, rather than repeatedly requesting it (EventSource interface, used to fall under HTML5)"
  },
  "x-doc-messaging": {
   "title": "Cross-document messaging",
   "description": "Method of sending information from a page on one domain to a page on a different one (using postMessage)"
  },
  "sni": {
   "title": "Server Name Indication",
   "description": "An extension to the TLS computer networking protocol by which a client indicates which hostname it is attempting to connect to at the start of the handshaking process."
  },
  "datauri": {
   "title": "Data URIs",
   "description": "Method of embedding images and other files in webpages as a string of text, generally using base64 encoding."
  },
  "wav": {
   "title": "Wav audio format",
   "description": "Waveform Audio File Format, aka WAV or WAVE, a typically uncompressed audio format. "
  },
  "mathml": {
   "title": "MathML",
   "description": "Special tags that allow mathematical formulas and notations to be written on web pages."
  },
  "css-featurequeries": {
   "title": "CSS Feature Queries",
   "description": "CSS Feature Queries allow authors to condition rules based on whether particular property declarations are supported in CSS using the @supports at rule."
  },
  "xhtml": {
   "title": "XHTML served as application/xhtml+xml",
   "description": "A strict form of HTML, and allows embedding of other XML languages"
  },
  "xhtmlsmil": {
   "title": "XHTML+SMIL animation",
   "description": "Method of using SMIL animation in web pages"
  },
  "wai-aria": {
   "title": "WAI-ARIA Accessibility features",
   "description": "Method of providing ways for people with disabilities to use dynamic web content and web applications."
  },
  "geolocation": {
   "title": "Geolocation",
   "description": "Method of informing a website of the users geographical location"
  },
  "flexbox": {
   "title": "Flexible Box Layout Module",
   "description": "Method of positioning elements in horizontal or vertical stacks. Support includes the support for the all properties prefixed with flex` as well as `display: flex`, `display: inline-flex`, `align-content`, `align-items`, `align-self`, `justify-content` and `order`."
  },
  "webgl": {
   "title": "WebGL - 3D Canvas graphics",
   "description": "Method of generating dynamic 3D graphics using JavaScript, accelerated through hardware"
  },
  "fileapi": {
   "title": "File API",
   "description": "Method of manipulating file objects in web applications client-side, as well as programmatically selecting them and accessing their data."
  },
  "shadowdom": {
   "title": "Shadow DOM",
   "description": "Method of establishing and maintaining functional boundaries between DOM trees and how these trees interact with each other within a document, thus enabling better functional encapsulation within the DOM."
  },
  "websockets": {
   "title": "Web Sockets",
   "description": "Bidirectional communication technology for web apps"
  },
  "hidden": {
   "title": "hidden attribute",
   "description": "The hidden` attribute may be applied to any element, and effectively hides elements similar to `display: none` in CSS."
  },
  "script-async": {
   "title": "async attribute for external scripts",
   "description": "The boolean async attribute on script elements allows the external JavaScript file to run when its available, without delaying page load first."
  },
  "mediasource": {
   "title": "Media Source Extensions",
   "description": "API allowing media data to be accessed from HTML video` and `audio` elements."
  },
  "cors": {
   "title": "Cross-Origin Resource Sharing",
   "description": "Method of performing XMLHttpRequests across domains"
  },
  "css-backdrop-filter": {
   "title": "CSS Backdrop Filter",
   "description": "Method of applying filter effects (like blur, grayscale or hue) to content/elements below the target element."
  },
  "calc": {
   "title": "calc() as CSS unit value",
   "description": "Method of allowing calculated values for length units, i.e. width: calc(100% - 3em)`"
  },
  "dom-range": {
   "title": "Document Object Model Range",
   "description": "A contiguous range of content in a Document, DocumentFragment or Attr"
  },
  "ruby": {
   "title": "Ruby annotation",
   "description": "Method of adding pronunciation or other annotations using ruby elements (primarily used in East Asian typography)."
  },
  "css-opacity": {
   "title": "CSS3 Opacity",
   "description": "Method of setting the transparency level of an element"
  },
  "form-validation": {
   "title": "Form validation",
   "description": "Method of setting required fields and field types without requiring JavaScript. This includes preventing forms from being submitted when appropriate, the checkValidity()` method as well as support for the `:invalid`, `:valid`, and `:required` CSS pseudo-classes."
  },
  "history": {
   "title": "Session history management",
   "description": "Method of manipulating the users browser's session history in JavaScript using history.pushState`, `history.replaceState` and the `popstate` event."
  },
  "json": {
   "title": "JSON parsing",
   "description": "Method of converting JavaScript objects to JSON strings and JSON back to objects using JSON.stringify() and JSON.parse()"
  },
  "classlist": {
   "title": "classList (DOMTokenList)",
   "description": "Method of easily manipulating classes on elements, using the DOMTokenList object."
  },
  "text-overflow": {
   "title": "CSS3 Text-overflow",
   "description": "Append ellipsis when text overflows its containing element"
  },
  "webm": {
   "title": "WebM video format",
   "description": "Multimedia format designed to provide a royalty-free, high-quality open video compression format for use with HTML5 video. WebM supports the video codec VP8 and VP9."
  },
  "mpeg4": {
   "title": "MPEG-4/H.264 video format",
   "description": "Commonly used video compression format."
  },
  "ogv": {
   "title": "Ogg/Theora video format",
   "description": "Free lossy video compression format."
  },
  "wordwrap": {
   "title": "CSS3 Overflow-wrap",
   "description": "Allows lines to be broken within words if an otherwise unbreakable string is too long to fit. Currently mostly supported using the word-wrap` property."
  },
  "pointerlock": {
   "title": "PointerLock API",
   "description": "API that provides access to raw mouse movement data. This is done by ignoring boundaries resulting from screen edges where the cursor cant go beyond, providing proper control for first person or real time strategy games. "
  },
  "object-fit": {
   "title": "CSS3 object-fit/object-position",
   "description": "Method of specifying how an object (image or video) should fit inside its box. object-fit options include \"contain\" (fit according to aspect ratio), \"fill\" (stretches object to fill) and \"cover\" (overflows box but maintains ratio), where object-position allows the object to be repositioned like background-image does."
  },
  "xhr2": {
   "title": "XMLHttpRequest advanced features",
   "description": "Adds more functionality to XHR (aka AJAX) requests like file uploads, transfer progress information and the ability to send form data. Previously known as [XMLHttpRequest Level 2](http://www.w3.org/TR/2012/WD-XMLHttpRequest-20120117/), these features now appear simply in the XMLHttpRequest spec."
  },
  "minmaxwh": {
   "title": "CSS min/max-width/height",
   "description": "Method of setting a minimum or maximum width or height to an element. "
  },
  "details": {
   "title": "Details & Summary elements",
   "description": "The <details> element generates a simple no-JavaScript widget to show/hide element contents, optionally by clicking on its child <summary> element."
  },
  "text-stroke": {
   "title": "CSS text-stroke",
   "description": "Method of declaring the outline (stroke) width and color for text."
  },
  "inline-block": {
   "title": "CSS inline-block",
   "description": "Method of displaying an element as a block while flowing it with text. "
  },
  "notifications": {
   "title": "Web Notifications",
   "description": "Method of alerting the user outside of a web page by displaying notifications (that do not require interaction by the user)."
  },
  "stream": {
   "title": "getUserMedia/Stream API",
   "description": "Method of accessing external device data (such as a webcam video stream). Formerly this was envisioned as the <device> element."
  },
  "svg-img": {
   "title": "SVG in HTML img element",
   "description": "Method of displaying SVG images in HTML using <img>."
  },
  "datalist": {
   "title": "Datalist element",
   "description": "Method of setting a list of options for a user to select in a text field, while leaving the ability to enter a custom value."
  },
  "dataset": {
   "title": "dataset & data-* attributes",
   "description": "Method of applying and accessing custom data to elements."
  },
  "css-grid": {
   "title": "CSS Grid Layout",
   "description": "Method of using a grid concept to lay out content, providing a mechanism for authors to divide available space for lay out into columns and rows using a set of predictable sizing behaviors"
  },
  "menu": {
   "title": "Toolbar/context menu",
   "description": "Method of defining a toolbar menu, a context menu or a list of (interactive) options using the <menu> element."
  },
  "css-zoom": {
   "title": "CSS zoom",
   "description": "Non-standard method of scaling content."
  },
  "rem": {
   "title": "rem (root em) units",
   "description": "Type of unit similar to em`, but relative only to the root element, not any parent element. Thus compounding does not occur as it does with `em` units."
  },
  "ttf": {
   "title": "TTF/OTF - TrueType and OpenType font support",
   "description": "Support for the TrueType (.ttf) and OpenType (.otf) outline font formats in @font-face. "
  },
  "touch": {
   "title": "Touch events",
   "description": "Method of registering when, where and how the interface is touched, for devices with a touch screen. These DOM events are similar to mousedown, mousemove, etc."
  },
  "matchesselector": {
   "title": "matches() DOM method",
   "description": "Method of testing whether or not a DOM element matches a given selector. Formerly known (and largely supported with prefix) as matchesSelector."
  },
  "pointer-events": {
   "title": "CSS pointer-events (for HTML)",
   "description": "This CSS property, when set to \"none\" allows elements to not receive hover/click events, instead the event will occur on anything behind it. "
  },
  "blobbuilder": {
   "title": "Blob constructing",
   "description": "Construct Blobs (binary large objects) either using the BlobBuilder API (deprecated) or the Blob constructor."
  },
  "filereader": {
   "title": "FileReader API",
   "description": "Method of reading the contents of a File or Blob object into memory"
  },
  "filesystem": {
   "title": "Filesystem & FileWriter API",
   "description": "Method of reading and writing files to a sandboxed file system."
  },
  "bloburls": {
   "title": "Blob URLs",
   "description": "Method of creating URL handles to the specified File or Blob object."
  },
  "rellist": {
   "title": "relList (DOMTokenList)",
   "description": "Method of easily manipulating rel attribute values on elements, using the DOMTokenList object (similar to classList)."
  },
  "typedarrays": {
   "title": "Typed Arrays",
   "description": "JavaScript typed arrays provide a mechanism for accessing raw binary data much more efficiently.\r\n"
  },
  "deviceorientation": {
   "title": "DeviceOrientation & DeviceMotion events",
   "description": "API for detecting orientation and motion events from the device running the browser."
  },
  "script-defer": {
   "title": "defer attribute for external scripts",
   "description": "The boolean defer attribute on script elements allows the external JavaScript file to run when the DOM is loaded, without delaying page load first."
  },
  "nav-timing": {
   "title": "Navigation Timing API",
   "description": "API for accessing timing information related to navigation and elements."
  },
  "audio-api": {
   "title": "Web Audio API",
   "description": "High-level JavaScript API for processing and synthesizing audio"
  },
  "css-regions": {
   "title": "CSS Regions",
   "description": "Method of flowing content into multiple elements."
  },
  "spellcheck-attribute": {
   "title": "Spellcheck attribute",
   "description": "Attribute for input`/`textarea` fields to enable/disable the browsers spellchecker."
  },
  "fullscreen": {
   "title": "Full Screen API",
   "description": "API for allowing content (like a video or canvas element) to take up the entire screen."
  },
  "css-exclusions": {
   "title": "CSS Exclusions Level 1",
   "description": "Exclusions defines how inline content flows around elements. It extends the content wrapping ability of floats to any block-level element."
  },
  "requestanimationframe": {
   "title": "requestAnimationFrame",
   "description": "API allowing a more efficient way of running script-based animation, compared to traditional methods using timeouts. Also covers support for cancelAnimationFrame`"
  },
  "input-range": {
   "title": "Range input type",
   "description": "Form field type that allows the user to select a value using a slider widget."
  },
  "matchmedia": {
   "title": "matchMedia",
   "description": "API for finding out whether or not a media query applies to the document."
  },
  "input-datetime": {
   "title": "Date and time input types",
   "description": "Form field widget to easily allow users to enter a date, time or both, generally by using a calendar/time input widget."
  },
  "document-execcommand": {
   "title": "Document.execCommand()",
   "description": "Allows running commands to manipulate the contents of an editable region in a document switched to designMode"
  },
  "input-color": {
   "title": "Color input type",
   "description": "Form field allowing the user to select a color."
  },
  "input-number": {
   "title": "Number input type",
   "description": "Form field type for numbers."
  },
  "getboundingclientrect": {
   "title": "Element.getBoundingClientRect()",
   "description": "Method to get the size and position of an elements bounding box, relative to the viewport."
  },
  "iframe-sandbox": {
   "title": "sandbox attribute for iframes",
   "description": "Method of running external site pages with reduced privileges (e.g. no JavaScript) in iframes."
  },
  "css-counters": {
   "title": "CSS Counters",
   "description": "Method of controlling number values in generated content, using the counter-reset` and `counter-increment` properties."
  },
  "css-resize": {
   "title": "CSS resize property",
   "description": "Method of allowing an element to be resized by the user, with options to limit to a given direction. "
  },
  "input-placeholder": {
   "title": "input placeholder attribute",
   "description": "Method of setting placeholder text for text-like input fields, to suggest the expected inserted information."
  },
  "spdy": {
   "title": "SPDY protocol",
   "description": "Networking protocol for low-latency transport of content over the web. Superseded by HTTP version 2."
  },
  "css-repeating-gradients": {
   "title": "CSS Repeating Gradients",
   "description": "Method of defining a repeating linear or radial color gradient as a CSS image."
  },
  "css-filters": {
   "title": "CSS Filter Effects",
   "description": "Method of applying filter effects (like blur, grayscale, brightness, contrast and hue) to elements, previously only possible by using SVG."
  },
  "getcomputedstyle": {
   "title": "getComputedStyle",
   "description": "API to get the current computed CSS styles applied to an element. This may be the current value applied by an animation or as set by a stylesheet."
  },
  "mp3": {
   "title": "MP3 audio format",
   "description": "Popular lossy audio compression format"
  },
  "word-break": {
   "title": "CSS3 word-break",
   "description": "Property to prevent or allow words to be broken over multiple lines between letters."
  },
  "viewport-units": {
   "title": "Viewport units: vw, vh, vmin, vmax",
   "description": "Length units representing 1% of the viewport size for viewport width (vw), height (vh), the smaller of the two (vmin), or the larger of the two (vmax)."
  },
  "contentsecuritypolicy": {
   "title": "Content Security Policy 1.0",
   "description": "Mitigate cross-site scripting attacks by whitelisting allowed sources of script, style, and other resources."
  },
  "pagevisibility": {
   "title": "Page Visibility",
   "description": "JavaScript API for determining whether a document is visible on the display"
  },
  "stricttransportsecurity": {
   "title": "Strict Transport Security",
   "description": "Declare that a website is only accessible over a secure connection (HTTPS)."
  },
  "style-scoped": {
   "title": "Scoped CSS",
   "description": "Allows CSS rules to be scoped to part of the document, based on the position of the style element."
  },
  "svg-fragment": {
   "title": "SVG fragment identifiers",
   "description": "Method of displaying only a part of an SVG image by defining a view ID or view box dimensions as the files fragment identifier."
  },
  "outline": {
   "title": "CSS outline",
   "description": "The CSS outline property is a shorthand property for setting one or more of the individual outline properties outline-style, outline-width and outline-color in a single rule. In most cases the use of this shortcut is preferable and more convenient."
  },
  "download": {
   "title": "Download attribute",
   "description": "When used on an anchor, this attribute signifies that the browser should download the resource the anchor points to rather than navigate to it."
  },
  "pointer": {
   "title": "Pointer events",
   "description": "This specification integrates various inputs from mice, touchscreens, and pens, making separate implementations no longer necessary and authoring for cross-device pointers easier. Not to be mistaken with the unrelated \"pointer-events\" CSS property."
  },
  "user-select-none": {
   "title": "CSS user-select: none",
   "description": "Method of preventing text/element selection using CSS. "
  },
  "input-file-accept": {
   "title": "accept attribute for file input",
   "description": "Allows a filter to be defined for what type of files a user may pick with from an <input type=\"file\">` dialog"
  },
  "webp": {
   "title": "WebP image format",
   "description": "Image format that supports lossy and lossless compression, as well as animation and alpha transparency."
  },
  "input-autocomplete-onoff": {
   "title": "autocomplete attribute: on & off values",
   "description": "The autocomplete` attribute for `input` elements indicates to the browser whether a value should or should not be autofilled when appropriate."
  },
  "intrinsic-width": {
   "title": "Intrinsic & Extrinsic Sizing",
   "description": "Allows for the heights and widths to be specified in intrinsic values using the fill`, `max-content`, `min-content`, and `fit-content` properties."
  },
  "cryptography": {
   "title": "Web Cryptography",
   "description": "JavaScript API for performing basic cryptographic operations in web applications"
  },
  "template": {
   "title": "HTML templates",
   "description": "Method of declaring a portion of reusable markup that is parsed but not rendered until cloned."
  },
  "opus": {
   "title": "Opus",
   "description": "Royalty-free open audio codec by IETF, which incorporated SILK from Skype and CELT from Xiph.org, to serve higher sound quality and lower latency at the same bitrate."
  },
  "jpegxr": {
   "title": "JPEG XR image format",
   "description": "The latest JPEG image format of Joint Photographic Experts Group which boasts better compression and supports lossless compression, alpha channel, and 48-bit deep color over normal jpg format."
  },
  "channel-messaging": {
   "title": "Channel messaging",
   "description": "Method for having two-way communication between browsing contexts (using MessageChannel)"
  },
  "css3-tabsize": {
   "title": "CSS3 tab-size",
   "description": "Method of customizing the width of the tab character. Only effective using white-space: pre' or 'white-space: pre-wrap'."
  },
  "mutationobserver": {
   "title": "Mutation Observer",
   "description": "Method for observing and reacting to changes to the DOM. Replaces MutationEvents, which is deprecated."
  },
  "css-selection": {
   "title": "::selection CSS pseudo-element",
   "description": "The ::selection CSS pseudo-element applies rules to the portion of a document that has been highlighted (e.g., selected with the mouse or another pointing device) by the user."
  },
  "css-placeholder": {
   "title": "::placeholder CSS pseudo-element",
   "description": "The ::placeholder pseudo-element represents placeholder text in an input field: text that represents the input and provides a hint to the user on how to fill out the form. For example, a date-input field might have the placeholder text YYYY/MM/DD` to clarify that numeric dates are to be entered in year-month-day order."
  },
  "css-deviceadaptation": {
   "title": "CSS Device Adaptation",
   "description": "A standard way to override the size of viewport in web page using the @viewport` rule, standardizing and replacing Apples own popular `<meta>` viewport implementation."
  },
  "text-emphasis": {
   "title": "text-emphasis styling",
   "description": "Method of using small symbols next to each glyph to emphasize a run of text, commonly used in East Asian languages. The text-emphasis` shorthand, and its `text-emphasis-style` and `text-emphasis-color` longhands, can be used to apply marks to the text. The `text-emphasis-position` property, which inherits separately, allows setting the emphasis marks position with respect to the text."
  },
  "midi": {
   "title": "Web MIDI API",
   "description": "The Web MIDI API specification defines a means for web developers to enumerate, manipulate and access MIDI devices"
  },
  "canvas-blending": {
   "title": "Canvas blend modes",
   "description": "Method of defining the effect resulting from overlaying two layers on a Canvas element."
  },
  "clipboard": {
   "title": "Clipboard API",
   "description": "API to provide copy, cut and paste events as well as provide access to the OS clipboard."
  },
  "rtcpeerconnection": {
   "title": "WebRTC Peer-to-peer connections",
   "description": "Method of allowing two users to communicate directly, browser to browser using the RTCPeerConnection API."
  },
  "css3-cursors": {
   "title": "CSS3 Cursors (original values)",
   "description": "CSS3 cursor values added in the 2004 spec, including none, context-menu, cell, vertical-text, alias, copy, no-drop, not-allowed, nesw-resize, nwse-resize, col-resize, row-resize and all-scroll. "
  },
  "css3-cursors-newer": {
   "title": "CSS3 Cursors: zoom-in & zoom-out",
   "description": "Support for zoom-in`, `zoom-out` values for the CSS3 `cursor` property."
  },
  "webvtt": {
   "title": "WebVTT - Web Video Text Tracks",
   "description": "Format for marking up text captions for multimedia resources."
  },
  "promises": {
   "title": "Promises",
   "description": "A promise represents the eventual result of an asynchronous operation."
  },
  "css-sticky": {
   "title": "CSS position:sticky",
   "description": "Keeps elements positioned as \"fixed\" or \"relative\" depending on how it appears in the viewport. As a result the element is \"stuck\" when necessary while scrolling."
  },
  "dialog": {
   "title": "Dialog element",
   "description": "Method of easily creating custom dialog boxes to display to the user with modal or non-modal options. Also includes a ::backdrop` pseudo-element for behind the element."
  },
  "css-variables": {
   "title": "CSS Variables",
   "description": "Permits the declaration and usage of cascading variables in stylesheets."
  },
  "vibration": {
   "title": "Vibration API",
   "description": "Method to access the vibration mechanism of the hosting device."
  },
  "css-backgroundblendmode": {
   "title": "CSS background-blend-mode",
   "description": "Allows blending between CSS background images, gradients, and colors."
  },
  "css-mixblendmode": {
   "title": "Blending of HTML/SVG elements",
   "description": "Allows blending between arbitrary SVG and HTML elements"
  },
  "speech-recognition": {
   "title": "Speech Recognition API",
   "description": "Method to provide speech input in a web browser."
  },
  "high-resolution-time": {
   "title": "High Resolution Time API",
   "description": "Method to provide the current time in sub-millisecond resolution and such that it is not subject to system clock skew or adjustments. Called using performance.now()`"
  },
  "battery-status": {
   "title": "Battery Status API",
   "description": "Method to provide information about the battery status of the hosting device."
  },
  "serviceworkers": {
   "title": "Service Workers",
   "description": "Method that enables applications to take advantage of persistent background processing, including hooks to enable bootstrapping of web applications while offline."
  },
  "text-decoration": {
   "title": "text-decoration styling",
   "description": "Method of defining the type, style and color of lines in the text-decoration property. These can be defined as shorthand (e.g. text-decoration: line-through dashed blue`) or as single properties (e.g. `text-decoration-color: blue`)"
  },
  "iframe-srcdoc": {
   "title": "srcdoc attribute for iframes",
   "description": "Override the content specified in the src` attribute (if present) with HTML content within the attribute."
  },
  "speech-synthesis": {
   "title": "Speech Synthesis API",
   "description": "A web API for controlling a text-to-speech output."
  },
  "user-timing": {
   "title": "User Timing API",
   "description": "Method to help web developers measure the performance of their applications by giving them access to high precision timestamps."
  },
  "srcset": {
   "title": "Srcset attribute",
   "description": "Allows authors to define various image resources and \"hints\" that assist a user agent to determine the most appropriate image source to display (e.g. high-resolution displays, small monitors, etc)."
  },
  "ambient-light": {
   "title": "Ambient Light API",
   "description": "Defines events that provide information about the ambient light level, as measured by a devices light sensor."
  },
  "will-change": {
   "title": "CSS will-change property",
   "description": "Method of optimizing animations by informing the browser which elements will change and what properties will change."
  },
  "css-shapes": {
   "title": "CSS Shapes Level 1",
   "description": "Allows geometric shapes to be set in CSS to define an area for text to flow around."
  },
  "domcontentloaded": {
   "title": "DOMContentLoaded",
   "description": "JavaScript event that fires when the DOM is loaded, but before all page assets are loaded (CSS, images, etc.)."
  },
  "proximity": {
   "title": "Proximity API",
   "description": "Defines events that provide information about the distance between a device and an object, as measured by a proximity sensor."
  },
  "kerning-pairs-ligatures": {
   "title": "Improved kerning pairs & ligatures",
   "description": "Currently non-standard method of improving kerning pairs & ligatures using text-rendering: optimizeLegibility`."
  },
  "iframe-seamless": {
   "title": "seamless attribute for iframes",
   "description": "The seamless attribute makes an iframes contents actually part of a page, and adopts the styles from its hosting page. The attribute has been [removed from the current specification](https://github.com/whatwg/html/issues/331). "
  },
  "css-image-orientation": {
   "title": "CSS3 image-orientation",
   "description": "CSS property used generally to fix the intended orientation of an image. This can be done using 90 degree increments or based on the images EXIF data using the \"from-image\" value."
  },
  "picture": {
   "title": "Picture element",
   "description": "A responsive images method to control which image resource a user agent presents to a user, based on resolution, media query and/or support for a particular image format"
  },
  "woff2": {
   "title": "WOFF 2.0 - Web Open Font Format",
   "description": "TrueType/OpenType font that provides better compression than WOFF 1.0."
  },
  "text-size-adjust": {
   "title": "CSS text-size-adjust",
   "description": "On mobile devices, the text-size-adjust CSS property allows Web authors to control if and how the text-inflating algorithm is applied to the textual content of the element it is applied to."
  },
  "web-animation": {
   "title": "Web Animations API",
   "description": "Lets you create animations that are run in the browser and as well as inspect and manipulate animations created through declarative means like CSS."
  },
  "resource-timing": {
   "title": "Resource Timing",
   "description": "Method to help web developers to collect complete timing information related to resources on a document."
  },
  "custom-elements": {
   "title": "Custom Elements",
   "description": "Method of defining and using new types of DOM elements in a document."
  },
  "imports": {
   "title": "HTML Imports",
   "description": "Method of including and reusing HTML documents in other HTML documents."
  },
  "input-file-multiple": {
   "title": "Multiple file selection",
   "description": "Allows users to select multiple files in the file picker."
  },
  "atob-btoa": {
   "title": "Base64 encoding and decoding",
   "description": "Utility functions for of encoding and decoding strings to and from base 64: window.atob() and window.btoa()."
  },
  "css-appearance": {
   "title": "CSS Appearance",
   "description": "The appearance` property defines how elements (particularly form controls) appear by default. By setting the value to `none` the default appearance can be entirely redefined using other CSS properties."
  },
  "objectrtc": {
   "title": "Object RTC (ORTC) API for WebRTC",
   "description": "Enables mobile endpoints to talk to servers and web browsers with Real-Time Communications (RTC) capabilities via native and simple JavaScript APIs"
  },
  "css-background-offsets": {
   "title": "CSS background-position edge offsets",
   "description": "Allows CSS background images to be positioned relative to the specified edge using the 3 to 4 value syntax. For example: background-position: right 5px bottom 5px;` for positioning 5px from the bottom-right corner."
  },
  "css-supports-api": {
   "title": "CSS.supports() API",
   "description": "The CSS.supports() static methods returns a Boolean value indicating if the browser supports a given CSS feature, or not."
  },
  "css-touch-action": {
   "title": "CSS touch-action property",
   "description": "touch-action is a CSS property that controls filtering of gesture events, providing developers with a declarative mechanism to selectively disable touch scrolling (in one or both axes), pinch-zooming or double-tap-zooming."
  },
  "autofocus": {
   "title": "Autofocus attribute",
   "description": "Allows a form field to be immediately focused on page load."
  },
  "css-clip-path": {
   "title": "CSS clip-path property",
   "description": "Method of defining the visible region of an element using SVG or a shape definition."
  },
  "getrandomvalues": {
   "title": "crypto.getRandomValues()",
   "description": "Method of generating cryptographically random values."
  },
  "screen-orientation": {
   "title": "Screen Orientation",
   "description": "Provides the ability to read the screen orientation state, to be informed when this state changes, and to be able to lock the screen orientation to a specific state."
  },
  "font-loading": {
   "title": "CSS Font Loading",
   "description": "This CSS module defines a scripting interface to font faces in CSS, allowing font faces to be easily created and loaded from script. It also provides methods to track the loading status of an individual font, or of all the fonts on an entire page."
  },
  "font-unicode-range": {
   "title": "Font unicode-range subsetting",
   "description": "This @font-face descriptor defines the set of Unicode codepoints that may be supported by the font face for which it is declared. The descriptor value is a comma-delimited list of Unicode range (<urange>) values. The union of these ranges defines the set of codepoints that serves as a hint for user agents when deciding whether or not to download a font resource for a given text run."
  },
  "gamepad": {
   "title": "Gamepad API",
   "description": "API to support input from USB gamepad controllers through JavaScript."
  },
  "css-font-stretch": {
   "title": "CSS font-stretch",
   "description": "If a font has multiple types of variations based on the width of characters, the font-stretch` property allows the appropriate one to be selected. The property in itself does not cause the browser to stretch to a font."
  },
  "font-size-adjust": {
   "title": "CSS font-size-adjust",
   "description": "Method of adjusting the font size in a matter that relates to the height of lowercase vs. uppercase letters. This makes it easier to set the size of fallback fonts."
  },
  "link-icon-png": {
   "title": "PNG favicons",
   "description": "Icon used by browsers to identify a webpage or site. While all browsers support the .ico` format, the PNG format can be preferable."
  },
  "link-icon-svg": {
   "title": "SVG favicons",
   "description": "Icon used by browsers to identify a webpage or site. While all browsers support the .ico` format, the SVG format can be preferable to more easily support higher resolutions or larger icons."
  },
  "css-media-resolution": {
   "title": "Media Queries: resolution feature",
   "description": "Allows a media query to be set based on the device pixels used per CSS unit. While the standard uses min`/`max-resolution` for this, some browsers support the older non-standard `device-pixel-ratio` media query."
  },
  "xml-serializer": {
   "title": "DOM Parsing and Serialization",
   "description": "Various DOM parsing and serializing functions, specifically DOMParser`, `XMLSerializer`, `innerHTML`, `outerHTML` and `adjacentHTML`."
  },
  "css-image-set": {
   "title": "CSS image-set",
   "description": "Method of letting the browser pick the most appropriate CSS background image from a given set, primarily for high PPI screens."
  },
  "css-boxdecorationbreak": {
   "title": "CSS box-decoration-break",
   "description": "Controls whether the boxs margins, borders, padding, and other decorations wrap the broken edges of the box fragments (when the box is split by a break (page/column/region/line)."
  },
  "object-observe": {
   "title": "Object.observe data binding",
   "description": "Method for data binding, a now-withdrawn ECMAScript 7 proposal"
  },
  "css-at-counter-style": {
   "title": "CSS Counter Styles",
   "description": "The @counter-style CSS at-rule allows custom counter styles to be defined. A @counter-style rule defines how to convert a counter value into a string representation."
  },
  "css-page-break": {
   "title": "CSS page-break properties",
   "description": "Properties to control the way elements are broken across (printed) pages."
  },
  "css-placeholder-shown": {
   "title": ":placeholder-shown CSS pseudo-class",
   "description": "Input elements can sometimes show placeholder text as a hint to the user on what to type in. See, for example, the placeholder attribute in HTML5. The :placeholder-shown pseudo-class matches an input element that is showing such placeholder text."
  },
  "broadcastchannel": {
   "title": "BroadcastChannel",
   "description": "BroadcastChannel allows scripts from the same origin but other browsing contexts (windows, workers) to send each other messages."
  },
  "css-crisp-edges": {
   "title": "Crisp edges/pixelated images",
   "description": "Forces images to be scaled with an algorithm that preserves contrast and edges in the image, without smoothing colors or introduce blur. This is intended for images such as pixel art. Official values that accomplish this for the image-rendering` property are `crisp-edges` and `pixelated`."
  },
  "css-text-align-last": {
   "title": "CSS3 text-align-last",
   "description": "CSS property to describe how the last line of a block or a line right before a forced line break when text-align` is `justify`."
  },
  "css-logical-props": {
   "title": "CSS Logical Properties",
   "description": "Use start/end properties that depend on LTR or RTL writing direction instead of left/right"
  },
  "fetch": {
   "title": "Fetch",
   "description": "A modern replacement for XMLHttpRequest."
  },
  "referrer-policy": {
   "title": "Referrer Policy",
   "description": "Allow control of HTTP referrers via the referrer meta tag."
  },
  "background-attachment": {
   "title": "CSS background-attachment",
   "description": "Method of defining how a background image is attached to a scrollable element. Values include scroll` (default), `fixed` and `local`."
  },
  "currentcolor": {
   "title": "CSS currentColor value",
   "description": "A CSS value that will apply the existing color` value to other properties like `background-color`, etc. "
  },
  "input-pattern": {
   "title": "Pattern attribute for input fields",
   "description": "Allows validation of an input field based on a given regular expression pattern."
  },
  "registerprotocolhandler": {
   "title": "Custom protocol handling",
   "description": "Method of allowing a webpage to handle a given protocol using navigator.registerProtocolHandler`. This allows certain URLs to be opened by a given web application, for example `mailto:` addresses can be opened by a webmail client."
  },
  "css-snappoints": {
   "title": "CSS Scroll snap points",
   "description": "CSS technique that allows customizable scrolling experiences like pagination of carousels by setting defined snap points."
  },
  "input-minlength": {
   "title": "Minimum length attribute for input fields",
   "description": "Declares a lower bound on the number of characters a user can input."
  },
  "css-media-interaction": {
   "title": "Media Queries: interaction media features",
   "description": "Allows a media query to be set based on the presence and accuracy of the users pointing device, and whether they have the ability to hover over elements on the page. This includes the pointer`, `any-pointer`, `hover`, and `any-hover` media features."
  },
  "ime": {
   "title": "Input Method Editor API",
   "description": "Provides scripted access to the Input Method Editor (IME). An IME is often used to input characters from East Asian languages by typing roman characters and selecting from the resulting suggestions."
  },
  "font-smooth": {
   "title": "CSS font-smooth",
   "description": "Controls the application of anti-aliasing when fonts are rendered."
  },
  "audiotracks": {
   "title": "Audio Tracks",
   "description": "Method of specifying and selecting between multiple audio tracks. Useful for providing audio descriptions, directors commentary, additional languages, alternative takes, etc."
  },
  "videotracks": {
   "title": "Video Tracks",
   "description": "Method of specifying and selecting between multiple video tracks. Useful for providing sign language tracks, burnt-in captions or subtitles, alternative camera angles, etc."
  },
  "contentsecuritypolicy2": {
   "title": "Content Security Policy Level 2",
   "description": "Mitigate cross-site scripting attacks by whitelisting allowed sources of script, style, and other resources. CSP 2 adds hash-source, nonce-source, and five new directives"
  },
  "permissions-api": {
   "title": "Permissions API",
   "description": "High-level JavaScript API for checking and requesting permissions"
  },
  "http2": {
   "title": "HTTP/2 protocol",
   "description": "Networking protocol for low-latency transport of content over the web. Originally started out from the SPDY protocol, now standardized as HTTP version 2."
  },
  "font-kerning": {
   "title": "CSS3 font-kerning",
   "description": "Controls the usage of the kerning information (spacing between letters) stored in the font. Note that this only affects OpenType fonts with kerning information, it has no effect on other fonts."
  },
  "jpeg2000": {
   "title": "JPEG 2000 image format",
   "description": "JPEG 2000 (JP2) was created by the Joint Photographic Experts Group committee in 2000 with the intention of superseding their original discrete cosine transform-based JPEG standard (created in 1992) with a newly designed, wavelet-based method. It offers some advantages in image fidelity over standard JPEG."
  },
  "upgradeinsecurerequests": {
   "title": "Upgrade Insecure Requests",
   "description": "Declare that browsers should transparently upgrade HTTP resources on a website to HTTPS."
  },
  "publickeypinning": {
   "title": "Public Key Pinning",
   "description": "Declare that a websites HTTPS certificate should only be treated as valid if the public key is contained in a specified list to prevent MITM attacks that use valid CA-issued certificates."
  },
  "input-email-tel-url": {
   "title": "Email, telephone & URL input types",
   "description": "Text input fields intended for email addresses, telephone numbers or URLs. Particularly useful in combination with [form validation](http://caniuse.com/#feat=form-validation)"
  },
  "fieldset-disabled": {
   "title": "disabled attribute of the fieldset element",
   "description": "Allows disabling all of the form control descendants of a fieldset via a disabled` attribute on the fieldset element itself."
  },
  "font-variant-alternates": {
   "title": "CSS font-variant-alternates",
   "description": "Controls the usage of alternate glyphs associated to alternative names defined in @font-feature-values for certain types of OpenType fonts."
  },
  "form-attribute": {
   "title": "Form attribute",
   "description": "Attribute for associating input and submit buttons with a form."
  },
  "es5": {
   "title": "ECMAScript 5",
   "description": "Full support for the ECMAScript 5 specification. Features include Function.prototype.bind`, Array methods like `indexOf`, `forEach`, `map` & `filter`, Object methods like `defineProperty`, `create` & `keys`, the `trim` method on Strings and many more."
  },
  "page-transition-events": {
   "title": "PageTransitionEvent",
   "description": "Fired at the Window when the pages entry in the session history stops being the current entry. Includes the pageshow` and `pagehide` events."
  },
  "ogg-vorbis": {
   "title": "Ogg Vorbis audio format",
   "description": "Vorbis is a free and open source audio format, most commonly used with the Ogg container."
  },
  "meter": {
   "title": "meter element",
   "description": "Method of indicating the current level of a gauge."
  },
  "progress": {
   "title": "progress element",
   "description": "Method of indicating a progress state."
  },
  "css-filter-function": {
   "title": "CSS filter() function",
   "description": "This function filters a CSS input image with a set of filter functions (like blur, grayscale or hue)"
  },
  "css-element-function": {
   "title": "CSS element() function",
   "description": "This function renders a live image generated from an arbitrary HTML element"
  },
  "u2f": {
   "title": "FIDO U2F API",
   "description": "Javascript API to interact with Universal Second Factor (U2F) devices. This allows users to log into sites more securely using two-factor authentication with a USB dongle. "
  },
  "aac": {
   "title": "AAC audio file format",
   "description": "Advanced Audio Coding format, designed to be the successor format to MP3, with generally better sound quality."
  },
  "link-rel-prefetch": {
   "title": "Resource Hints: prefetch",
   "description": "Informs the browsers that a given resource should be prefetched so it can be loaded more quickly. This is indicated using <link rel=\"prefetch\" href=\"(url)\">`"
  },
  "ol-reversed": {
   "title": "Reversed attribute of ordered lists",
   "description": "This attribute makes an ordered list number its items in descending order (large to small), instead of ascending order (small to large; the default). The order that the list items are displayed in is not affected."
  },
  "css-first-letter": {
   "title": "::first-letter CSS pseudo-element selector",
   "description": "CSS pseudo-element that allows styling only the first \"letter\" of text within an element. Useful for implementing initial caps or drop caps styling."
  },
  "wbr-element": {
   "title": "wbr (word break opportunity) element",
   "description": "Represents an extra place where a line of text may optionally be broken."
  },
  "const": {
   "title": "const",
   "description": "Declares a constant with block level scope"
  },
  "css-all": {
   "title": "CSS all property",
   "description": "A shorthand property for resetting all CSS properties except for direction` and `unicode-bidi`."
  },
  "css-initial-value": {
   "title": "CSS initial value",
   "description": "A CSS value that will apply a propertys initial value as defined in the CSS specification that defines the property"
  },
  "css-letter-spacing": {
   "title": "letter-spacing CSS property",
   "description": "Controls spacing between characters of text (i.e. \"tracking\" in typographical terms). Not to be confused with kerning."
  },
  "css-unset-value": {
   "title": "CSS unset value",
   "description": "A CSS value thats the same as \"inherit\" if a property is inherited or \"initial\" if a property is not inherited."
  },
  "insertadjacenthtml": {
   "title": "Element.insertAdjacentHTML()",
   "description": "Inserts a string of HTML into a specified position in the DOM relative to the given element."
  },
  "let": {
   "title": "let",
   "description": "Declares a variable with block level scope"
  },
  "arrow-functions": {
   "title": "Arrow functions",
   "description": "Function shorthand using =>` syntax and lexical `this` binding."
  },
  "asmjs": {
   "title": "asm.js",
   "description": "an extraordinarily optimizable, low-level subset of JavaScript, indended to be a compile target from languages like C++."
  },
  "lazyload": {
   "title": "Resource Hints: Lazyload",
   "description": "Gives a hint to the browser to lower the loading priority of a resource."
  },
  "link-rel-dns-prefetch": {
   "title": "Resource Hints: dns-prefetch",
   "description": "Gives a hint to the browser to perform a DNS lookup in the background to improve performance. This is indicated using <link rel=\"dns-prefetch\" href=\"http://example-domain.com/\">`"
  },
  "link-rel-prerender": {
   "title": "Resource Hints: prerender",
   "description": "Gives a hint to the browser to render the specified page in the background, speeding up page load if the user navigates to it. This is indicated using <link rel=\"prerender\" href=\"(url)\">`"
  },
  "rest-parameters": {
   "title": "Rest parameters",
   "description": "Allows representation of an indefinite number of arguments as an array."
  },
  "css-cross-fade": {
   "title": "CSS Cross-Fade Function",
   "description": "Image function to create a \"crossfade\" between images. This allows one image to transition (fade) into another based on a percentage value."
  },
  "css-writing-mode": {
   "title": "CSS writing-mode property",
   "description": "Property to define whether lines of text are laid out horizontally or vertically and the direction in which blocks progress."
  },
  "customevent": {
   "title": "CustomEvent",
   "description": "A DOM event interface that can carry custom application-defined data."
  },
  "textcontent": {
   "title": "Node.textContent",
   "description": "DOM Node property representing the text content of a node and its descendants"
  },
  "addeventlistener": {
   "title": "EventTarget.addEventListener()",
   "description": "The modern standard API for adding DOM event handlers. Introduced in the DOM Level 2 Events spec. Also implies support for the [capture phase](https://dom.spec.whatwg.org/#dom-event-capturing_phase) of DOM event dispatch."
  },
  "dispatchevent": {
   "title": "EventTarget.dispatchEvent",
   "description": "Method to programmatically trigger a DOM event."
  },
  "documenthead": {
   "title": "document.head",
   "description": "Convenience property for accessing the <head>` element"
  },
  "innertext": {
   "title": "Node.innerText",
   "description": "A currently-nonstandard property representing the text within a DOM element and its descendants. As a getter, it approximates the text the user would get if they highlighted the contents of the element with the cursor and then copied to the clipboard."
  },
  "client-hints-dpr-width-viewport": {
   "title": "Client Hints: DPR, Width, Viewport-Width",
   "description": "DPR, Width, and Viewport-Width hints enable proactive content negotiation between client and server, enabling automated delivery of optimized assets - e.g. auto-negotiating image DPR resolution."
  },
  "link-rel-preconnect": {
   "title": "Resource Hints: preconnect",
   "description": "Gives a hint to the browser to begin the connection handshake (DNS, TCP, TLS) in the background to improve performance. This is indicated using <link rel=\"preconnect\" href=\"https://example-domain.com/\">`"
  },
  "netinfo": {
   "title": "Network Information API",
   "description": "The Network Information API enables web applications to access information about the network connection in use by the device."
  },
  "setimmediate": {
   "title": "Efficient Script Yielding: setImmediate()",
   "description": "Yields control flow without the minimum delays enforced by setTimeout"
  },
  "es6-number": {
   "title": "ES6 Number",
   "description": "Extensions to the Number` built-in object in ES6, including constant properties `EPSILON`, `MIN_SAFE_INTEGER`, and `MAX_SAFE_INTEGER`, and methods ` isFinite`, `isInteger`, `isSafeInteger`, and `isNaN`."
  },
  "maxlength": {
   "title": "maxlength attribute for input and textarea elements",
   "description": "Declares an upper bound on the number of characters the user can input. Normally the UI ignores attempts by the user to type in additional characters beyond this limit."
  },
  "proxy": {
   "title": "Proxy object",
   "description": "The Proxy object allows custom behaviour to be defined for fundamental operations. Useful for logging, profiling, object virtualisation, etc."
  },
  "keyboardevent-which": {
   "title": "KeyboardEvent.which",
   "description": "A legacy KeyboardEvent` property that is equivalent to either `KeyboardEvent.keyCode` or `KeyboardEvent.charCode` depending on whether the key is alphanumeric."
  },
  "keyboardevent-charcode": {
   "title": "KeyboardEvent.charCode",
   "description": "A legacy KeyboardEvent` property that gives the Unicode codepoint number of a character key pressed during a `keypress` event."
  },
  "keyboardevent-code": {
   "title": "KeyboardEvent.code",
   "description": "A KeyboardEvent` property representing the physical key that was pressed, ignoring the keyboard layout and ignoring whether any modifier keys were active."
  },
  "keyboardevent-location": {
   "title": "KeyboardEvent.location",
   "description": "A KeyboardEvent` property that indicates the location of the key on the input device. Useful when there are more than one physical key for the same logical key (e.g. left or right \"Control\" key; main or numpad \"1\" key)."
  },
  "keyboardevent-getmodifierstate": {
   "title": "KeyboardEvent.getModifierState()",
   "description": "KeyboardEvent` method that returns the state (whether the key is pressed/locked or not) of the given modifier key."
  },
  "keyboardevent-key": {
   "title": "KeyboardEvent.key",
   "description": "A KeyboardEvent` property whose value is a string identifying the key that was pressed. Covers character keys, non-character keys (e.g. arrow keys), and dead keys."
  },
  "brotli": {
   "title": "Brotli Accept-Encoding/Content-Encoding",
   "description": "More effective lossless compression algorithm than gzip and deflate."
  },
  "element-closest": {
   "title": "Element.closest()",
   "description": "DOM method that returns the current element if it matches the given selector, or else the closest ancestor element that matches the given selector, or else null."
  },
  "input-event": {
   "title": "input event",
   "description": "The input` event is fired when the user changes the value of an `<input>` element, `<select>` element, or `<textarea>` element. By contrast, the \"change\" event usually only fires after the form control has lost focus."
  },
  "input-search": {
   "title": "Search input type",
   "description": "Search field form input type. Intended to look like the underlying platforms native search field widget (if there is one). Other than its appearance, it's the same as an <input type=\"text\">`."
  },
  "css-motion-paths": {
   "title": "CSS Motion Path",
   "description": "Allows elements to be animated along SVG paths or shapes"
  },
  "css-scroll-behavior": {
   "title": "CSSOM Scroll-behavior",
   "description": "Method of specifying the scrolling behavior for a scrolling box, when scrolling happens due to navigation or CSSOM scrolling APIs."
  },
  "subresource-integrity": {
   "title": "Subresource Integrity",
   "description": "Subresource Integrity enables browsers to verify that file is delivered without unexpected manipulation."
  },
  "css-in-out-of-range": {
   "title": ":in-range and :out-of-range CSS pseudo-classes",
   "description": "If a temporal or number <input>` has `max` and/or `min` attributes, then `:in-range` matches when the value is within the specified range and `:out-of-range` matches when the value is outside the specified range. If there are no range constraints, then neither pseudo-class matches."
  },
  "push-api": {
   "title": "Push API",
   "description": "API to allow messages to be pushed from a server to a browser, even when the site isnt focused or even open in the browser."
  },
  "background-position-x-y": {
   "title": "background-position-x & background-position-y",
   "description": "CSS longhand properties to define x or y positions separately."
  },
  "css-revert-value": {
   "title": "CSS revert value",
   "description": "A CSS keyword value that resets a propertys value to the default specified by the browser in its UA stylesheet, as if the webpage had not included any CSS. For example, display:revert` on a `<div>` would result in `display:block`. This is in contrast to the `initial` value, which is simply defined on a per-property basis, and for `display` would be `inline`."
  },
  "css-widows-orphans": {
   "title": "CSS widows & orphans",
   "description": "CSS properties to control when lines break across pages or columns by defining the amount of lines that must be left before or after the break."
  },
  "web-bluetooth": {
   "title": "Web Bluetooth",
   "description": "Access user-selected Bluetooth devices over GATT"
  }
 },
 "browsers": {
  "ie": {
   "name": "IE",
   "version": "11"
  },
  "edge": {
   "name": "Edge",
   "version": "13"
  },
  "firefox": {
   "name": "Firefox",
   "version": "44"
  },
  "chrome": {
   "name": "Chrome",
   "version": "48"
  },
  "safari": {
   "name": "Safari",
   "version": "9"
  },
  "opera": {
   "name": "Opera",
   "version": "34"
  },
  "ios safari": {
   "name": "iOS Safari",
   "version": "9.0-9.2"
  },
  "opera mini": {
   "name": "Opera Mini",
   "version": "5.0-8.0"
  },
  "android browser": {
   "name": "Android Browser",
   "version": "47"
  },
  "blackberry browser": {
   "name": "Blackberry Browser",
   "version": "10"
  },
  "opera mobile": {
   "name": "Opera Mobile",
   "version": "33"
  },
  "chrome for android": {
   "name": "Chrome for Android",
   "version": "47"
  },
  "firefox for android": {
   "name": "Firefox for Android",
   "version": "44"
  },
  "ie mobile": {
   "name": "IE Mobile",
   "version": "11"
  },
  "uc browser for android": {
   "name": "UC Browser for Android",
   "version": "9.9"
  }
 }
}